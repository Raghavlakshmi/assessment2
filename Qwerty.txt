import React, { useState, useEffect } from 'react';
import { Bell, Search, Edit, User, Heart, Share2, Bookmark, MessageCircle, ThumbsUp, ArrowLeft } from 'lucide-react';

// Header Component with navigation
const Header = ({ onLogoClick }) => (
  <header className="border-b border-gray-200 fixed top-0 w-full bg-white z-50">
    <div className="max-w-7xl mx-auto px-4">
      <div className="flex justify-between items-center h-16">
        <div className="flex items-center">
          <span 
            className="text-2xl font-bold cursor-pointer" 
            onClick={onLogoClick}
          >
            Medium
          </span>
        </div>
        
        <div className="hidden md:flex items-center space-x-8">
          <div className="relative">
            <input 
              type="text"
              placeholder="Search Medium"
              className="bg-gray-100 rounded-full py-2 pl-10 pr-4 w-64 focus:outline-none"
            />
            <Search className="absolute left-3 top-2.5 h-5 w-5 text-gray-400" />
          </div>
          
          <Bell className="h-5 w-5 text-gray-600 cursor-pointer" />
          
          <button className="flex items-center space-x-1 bg-green-600 text-white px-4 py-2 rounded-full hover:bg-green-700">
            <Edit className="h-4 w-4" />
            <span>Write</span>
          </button>
          
          <User className="h-8 w-8 text-gray-600 cursor-pointer" />
        </div>
      </div>
    </div>
  </header>
);

// ... Previous Hero component remains the same ...

// Modified ArticleCard Component
const ArticleCard = ({ article, onArticleClick }) => (
  <article 
    className="flex flex-col space-y-4 py-6 border-b border-gray-200 cursor-pointer" 
    onClick={() => onArticleClick(article)}
  >
    <div className="flex items-center space-x-2">
      <img 
        src="/api/placeholder/32/32"
        alt={article.author} 
        className="w-8 h-8 rounded-full"
      />
      <span className="text-sm font-medium">{article.author}</span>
    </div>
    
    <div className="flex space-x-4">
      <div className="flex-1">
        <h2 className="text-xl font-bold mb-2 hover:underline">
          {article.title}
        </h2>
        <p className="text-gray-600 line-clamp-3 mb-4">
          {article.excerpt}
        </p>
        
        <div className="flex items-center space-x-4 text-sm text-gray-500">
          <span>{article.date}</span>
          <span>·</span>
          <span>{article.readTime} min read</span>
          <span>·</span>
          <span className="px-2 py-1 bg-gray-100 rounded-full">
            {article.category}
          </span>
        </div>
      </div>
      
      <img 
        src="/api/placeholder/200/134"
        alt={article.title}
        className="w-[200px] h-[134px] object-cover"
      />
    </div>
  </article>
);

// Article Detail Component
const ArticleDetail = ({ article, onBack }) => {
  const [claps, setClaps] = useState(0);
  const [isFollowing, setIsFollowing] = useState(false);

  return (
    <div className="max-w-4xl mx-auto px-4 py-8 pt-20">
      <button 
        onClick={onBack}
        className="flex items-center space-x-2 mb-6 text-gray-600 hover:text-gray-900"
      >
        <ArrowLeft className="h-5 w-5" />
        <span>Back to home</span>
      </button>

      {/* Author info and actions */}
      <div className="flex justify-between items-center mb-8">
        <div className="flex items-center space-x-4">
          <img
            src="/api/placeholder/48/48"
            alt={article.author}
            className="w-12 h-12 rounded-full"
          />
          <div>
            <h3 className="font-medium">{article.author}</h3>
            <p className="text-sm text-gray-500">
              {article.date} · {article.readTime} min read
            </p>
          </div>
        </div>
        <div className="flex items-center space-x-4">
          <button 
            onClick={() => setIsFollowing(!isFollowing)}
            className={`px-4 py-2 rounded-full border ${
              isFollowing 
                ? 'bg-green-100 border-green-600 text-green-600' 
                : 'border-gray-300'
            }`}
          >
            {isFollowing ? 'Following' : 'Follow'}
          </button>
          <Share2 className="h-5 w-5 text-gray-600 cursor-pointer" />
          <Bookmark className="h-5 w-5 text-gray-600 cursor-pointer" />
        </div>
      </div>

      {/* Article content */}
      <h1 className="text-4xl font-bold mb-4">{article.title}</h1>
      <p className="text-xl text-gray-700 mb-8">{article.excerpt}</p>
      <div className="prose max-w-none mb-8">
        <p>This is the full article content. In a real application, this would be the complete article text with proper formatting and styling.</p>
        <h2>Section 1</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
        <h2>Section 2</h2>
        <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
      </div>

      {/* Engagement bar */}
      <div className="flex justify-between items-center border-t border-b border-gray-200 py-4 my-8">
        <div className="flex items-center space-x-4">
          <button 
            onClick={() => setClaps(c => c + 1)}
            className="flex items-center space-x-2"
          >
            <Heart className="h-5 w-5" />
            <span>{claps}</span>
          </button>
          <button className="flex items-center space-x-2">
            <MessageCircle className="h-5 w-5" />
            <span>23</span>
          </button>
        </div>
        <div className="flex items-center space-x-4">
          <Share2 className="h-5 w-5 cursor-pointer" />
          <Bookmark className="h-5 w-5 cursor-pointer" />
        </div>
      </div>

      <CommentsSection />
    </div>
  );
};

// Main App Component with State-Based Navigation
const App = () => {
  const [selectedArticle, setSelectedArticle] = useState(null);
  const [articles] = useState([
    {
      id: 1,
      author: "John Doe",
      title: "The Future of Web Development",
      excerpt: "Exploring the latest trends in web development and what's coming next in 2025...",
      date: "Feb 5, 2024",
      readTime: "5",
      category: "Programming"
    },
    {
      id: 2,
      author: "Jane Smith",
      title: "Understanding React Performance",
      excerpt: "Deep dive into React's rendering behavior and optimization techniques...",
      date: "Feb 5, 2024",
      readTime: "7",
      category: "React"
    }
  ]);

  const handleArticleClick = (article) => {
    setSelectedArticle(article);
    window.scrollTo(0, 0);
  };

  const handleBackToHome = () => {
    setSelectedArticle(null);
    window.scrollTo(0, 0);
  };

  return (
    <div className="min-h-screen bg-white">
      <Header onLogoClick={handleBackToHome} />
      
      {selectedArticle ? (
        <ArticleDetail 
          article={selectedArticle} 
          onBack={handleBackToHome}
        />
      ) : (
        <>
          <Hero />
          <TrendingSection />
          <TopicsNav />
          <main className="max-w-7xl mx-auto py-8">
            <div className="max-w-4xl mx-auto px-4">
              {articles.map((article) => (
                <ArticleCard
                  key={article.id}
                  article={article}
                  onArticleClick={handleArticleClick}
                />
              ))}
            </div>
          </main>
        </>
      )}
    </div>
  );
};

export default App;
This is a clone of medium app what does it do tell?
